/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_HW_SD_GENERATED_TRACERS_H
#define TRACE_HW_SD_GENERATED_TRACERS_H

#include "qemu-common.h"
#include "trace/control.h"

extern TraceEvent _TRACE_SDHCI_SET_INSERTED_EVENT;
extern TraceEvent _TRACE_SDHCI_SEND_COMMAND_EVENT;
extern TraceEvent _TRACE_SDHCI_ERROR_EVENT;
extern TraceEvent _TRACE_SDHCI_RESPONSE4_EVENT;
extern TraceEvent _TRACE_SDHCI_RESPONSE16_EVENT;
extern TraceEvent _TRACE_SDHCI_END_TRANSFER_EVENT;
extern TraceEvent _TRACE_SDHCI_ADMA_EVENT;
extern TraceEvent _TRACE_SDHCI_ADMA_LOOP_EVENT;
extern TraceEvent _TRACE_SDHCI_ADMA_TRANSFER_COMPLETED_EVENT;
extern TraceEvent _TRACE_SDHCI_ACCESS_EVENT;
extern TraceEvent _TRACE_SDHCI_READ_DATAPORT_EVENT;
extern TraceEvent _TRACE_SDHCI_WRITE_DATAPORT_EVENT;
extern TraceEvent _TRACE_MILKYMIST_MEMCARD_MEMORY_READ_EVENT;
extern TraceEvent _TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE_EVENT;
extern TraceEvent _TRACE_PXA2XX_MMCI_READ_EVENT;
extern TraceEvent _TRACE_PXA2XX_MMCI_WRITE_EVENT;
extern uint16_t _TRACE_SDHCI_SET_INSERTED_DSTATE;
extern uint16_t _TRACE_SDHCI_SEND_COMMAND_DSTATE;
extern uint16_t _TRACE_SDHCI_ERROR_DSTATE;
extern uint16_t _TRACE_SDHCI_RESPONSE4_DSTATE;
extern uint16_t _TRACE_SDHCI_RESPONSE16_DSTATE;
extern uint16_t _TRACE_SDHCI_END_TRANSFER_DSTATE;
extern uint16_t _TRACE_SDHCI_ADMA_DSTATE;
extern uint16_t _TRACE_SDHCI_ADMA_LOOP_DSTATE;
extern uint16_t _TRACE_SDHCI_ADMA_TRANSFER_COMPLETED_DSTATE;
extern uint16_t _TRACE_SDHCI_ACCESS_DSTATE;
extern uint16_t _TRACE_SDHCI_READ_DATAPORT_DSTATE;
extern uint16_t _TRACE_SDHCI_WRITE_DATAPORT_DSTATE;
extern uint16_t _TRACE_MILKYMIST_MEMCARD_MEMORY_READ_DSTATE;
extern uint16_t _TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE_DSTATE;
extern uint16_t _TRACE_PXA2XX_MMCI_READ_DSTATE;
extern uint16_t _TRACE_PXA2XX_MMCI_WRITE_DSTATE;
#define TRACE_SDHCI_SET_INSERTED_ENABLED 1
#define TRACE_SDHCI_SEND_COMMAND_ENABLED 1
#define TRACE_SDHCI_ERROR_ENABLED 1
#define TRACE_SDHCI_RESPONSE4_ENABLED 1
#define TRACE_SDHCI_RESPONSE16_ENABLED 1
#define TRACE_SDHCI_END_TRANSFER_ENABLED 1
#define TRACE_SDHCI_ADMA_ENABLED 1
#define TRACE_SDHCI_ADMA_LOOP_ENABLED 1
#define TRACE_SDHCI_ADMA_TRANSFER_COMPLETED_ENABLED 1
#define TRACE_SDHCI_ACCESS_ENABLED 1
#define TRACE_SDHCI_READ_DATAPORT_ENABLED 1
#define TRACE_SDHCI_WRITE_DATAPORT_ENABLED 1
#define TRACE_MILKYMIST_MEMCARD_MEMORY_READ_ENABLED 1
#define TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE_ENABLED 1
#define TRACE_PXA2XX_MMCI_READ_ENABLED 1
#define TRACE_PXA2XX_MMCI_WRITE_ENABLED 1
#include "qemu/log.h"


#define TRACE_SDHCI_SET_INSERTED_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_SET_INSERTED) || \
    false)

static inline void _nocheck__trace_sdhci_set_inserted(const char * level)
{
    if (trace_event_get_state(TRACE_SDHCI_SET_INSERTED)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_set_inserted " "card state changed: %s" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , level);
    }
}

static inline void trace_sdhci_set_inserted(const char * level)
{
    if (true) {
        _nocheck__trace_sdhci_set_inserted(level);
    }
}

#define TRACE_SDHCI_SEND_COMMAND_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_SEND_COMMAND) || \
    false)

static inline void _nocheck__trace_sdhci_send_command(uint8_t cmd, uint32_t arg)
{
    if (trace_event_get_state(TRACE_SDHCI_SEND_COMMAND)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_send_command " "CMD%02u ARG[0x%08x]" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , cmd, arg);
    }
}

static inline void trace_sdhci_send_command(uint8_t cmd, uint32_t arg)
{
    if (true) {
        _nocheck__trace_sdhci_send_command(cmd, arg);
    }
}

#define TRACE_SDHCI_ERROR_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_ERROR) || \
    false)

static inline void _nocheck__trace_sdhci_error(const char * msg)
{
    if (trace_event_get_state(TRACE_SDHCI_ERROR)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_error " "%s" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , msg);
    }
}

static inline void trace_sdhci_error(const char * msg)
{
    if (true) {
        _nocheck__trace_sdhci_error(msg);
    }
}

#define TRACE_SDHCI_RESPONSE4_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_RESPONSE4) || \
    false)

static inline void _nocheck__trace_sdhci_response4(uint32_t r0)
{
    if (trace_event_get_state(TRACE_SDHCI_RESPONSE4)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_response4 " "RSPREG[31..0]=0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , r0);
    }
}

static inline void trace_sdhci_response4(uint32_t r0)
{
    if (true) {
        _nocheck__trace_sdhci_response4(r0);
    }
}

#define TRACE_SDHCI_RESPONSE16_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_RESPONSE16) || \
    false)

static inline void _nocheck__trace_sdhci_response16(uint32_t r3, uint32_t r2, uint32_t r1, uint32_t r0)
{
    if (trace_event_get_state(TRACE_SDHCI_RESPONSE16)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_response16 " "RSPREG[127..96]=0x%08x, RSPREG[95..64]=0x%08x, RSPREG[63..32]=0x%08x, RSPREG[31..0]=0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , r3, r2, r1, r0);
    }
}

static inline void trace_sdhci_response16(uint32_t r3, uint32_t r2, uint32_t r1, uint32_t r0)
{
    if (true) {
        _nocheck__trace_sdhci_response16(r3, r2, r1, r0);
    }
}

#define TRACE_SDHCI_END_TRANSFER_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_END_TRANSFER) || \
    false)

static inline void _nocheck__trace_sdhci_end_transfer(uint8_t cmd, uint32_t arg)
{
    if (trace_event_get_state(TRACE_SDHCI_END_TRANSFER)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_end_transfer " "Automatically issue CMD%02u 0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , cmd, arg);
    }
}

static inline void trace_sdhci_end_transfer(uint8_t cmd, uint32_t arg)
{
    if (true) {
        _nocheck__trace_sdhci_end_transfer(cmd, arg);
    }
}

#define TRACE_SDHCI_ADMA_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_ADMA) || \
    false)

static inline void _nocheck__trace_sdhci_adma(const char * desc, uint32_t sysad)
{
    if (trace_event_get_state(TRACE_SDHCI_ADMA)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_adma " "%s: admasysaddr=0x%" PRIx32 "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , desc, sysad);
    }
}

static inline void trace_sdhci_adma(const char * desc, uint32_t sysad)
{
    if (true) {
        _nocheck__trace_sdhci_adma(desc, sysad);
    }
}

#define TRACE_SDHCI_ADMA_LOOP_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_ADMA_LOOP) || \
    false)

static inline void _nocheck__trace_sdhci_adma_loop(uint64_t addr, uint16_t length, uint8_t attr)
{
    if (trace_event_get_state(TRACE_SDHCI_ADMA_LOOP)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_adma_loop " "addr=0x%08" PRIx64 ", len=%d, attr=0x%x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , addr, length, attr);
    }
}

static inline void trace_sdhci_adma_loop(uint64_t addr, uint16_t length, uint8_t attr)
{
    if (true) {
        _nocheck__trace_sdhci_adma_loop(addr, length, attr);
    }
}

#define TRACE_SDHCI_ADMA_TRANSFER_COMPLETED_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_ADMA_TRANSFER_COMPLETED) || \
    false)

static inline void _nocheck__trace_sdhci_adma_transfer_completed(void)
{
    if (trace_event_get_state(TRACE_SDHCI_ADMA_TRANSFER_COMPLETED)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_adma_transfer_completed " "" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      );
    }
}

static inline void trace_sdhci_adma_transfer_completed(void)
{
    if (true) {
        _nocheck__trace_sdhci_adma_transfer_completed();
    }
}

#define TRACE_SDHCI_ACCESS_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_ACCESS) || \
    false)

static inline void _nocheck__trace_sdhci_access(const char * access, unsigned int size, uint64_t offset, const char * dir, uint64_t val, uint64_t val2)
{
    if (trace_event_get_state(TRACE_SDHCI_ACCESS)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_access " "%s%u: addr[0x%04" PRIx64 "] %s 0x%08" PRIx64 " (%" PRIu64 ")" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , access, size, offset, dir, val, val2);
    }
}

static inline void trace_sdhci_access(const char * access, unsigned int size, uint64_t offset, const char * dir, uint64_t val, uint64_t val2)
{
    if (true) {
        _nocheck__trace_sdhci_access(access, size, offset, dir, val, val2);
    }
}

#define TRACE_SDHCI_READ_DATAPORT_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_READ_DATAPORT) || \
    false)

static inline void _nocheck__trace_sdhci_read_dataport(uint16_t data_count)
{
    if (trace_event_get_state(TRACE_SDHCI_READ_DATAPORT)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_read_dataport " "all %u bytes of data have been read from input buffer" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , data_count);
    }
}

static inline void trace_sdhci_read_dataport(uint16_t data_count)
{
    if (true) {
        _nocheck__trace_sdhci_read_dataport(data_count);
    }
}

#define TRACE_SDHCI_WRITE_DATAPORT_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_SDHCI_WRITE_DATAPORT) || \
    false)

static inline void _nocheck__trace_sdhci_write_dataport(uint16_t data_count)
{
    if (trace_event_get_state(TRACE_SDHCI_WRITE_DATAPORT)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:sdhci_write_dataport " "write buffer filled with %u bytes of data" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , data_count);
    }
}

static inline void trace_sdhci_write_dataport(uint16_t data_count)
{
    if (true) {
        _nocheck__trace_sdhci_write_dataport(data_count);
    }
}

#define TRACE_MILKYMIST_MEMCARD_MEMORY_READ_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_MILKYMIST_MEMCARD_MEMORY_READ) || \
    false)

static inline void _nocheck__trace_milkymist_memcard_memory_read(uint32_t addr, uint32_t value)
{
    if (trace_event_get_state(TRACE_MILKYMIST_MEMCARD_MEMORY_READ)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:milkymist_memcard_memory_read " "addr 0x%08x value 0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , addr, value);
    }
}

static inline void trace_milkymist_memcard_memory_read(uint32_t addr, uint32_t value)
{
    if (true) {
        _nocheck__trace_milkymist_memcard_memory_read(addr, value);
    }
}

#define TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE) || \
    false)

static inline void _nocheck__trace_milkymist_memcard_memory_write(uint32_t addr, uint32_t value)
{
    if (trace_event_get_state(TRACE_MILKYMIST_MEMCARD_MEMORY_WRITE)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:milkymist_memcard_memory_write " "addr 0x%08x value 0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , addr, value);
    }
}

static inline void trace_milkymist_memcard_memory_write(uint32_t addr, uint32_t value)
{
    if (true) {
        _nocheck__trace_milkymist_memcard_memory_write(addr, value);
    }
}

#define TRACE_PXA2XX_MMCI_READ_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_PXA2XX_MMCI_READ) || \
    false)

static inline void _nocheck__trace_pxa2xx_mmci_read(uint8_t size, uint32_t addr, uint32_t value)
{
    if (trace_event_get_state(TRACE_PXA2XX_MMCI_READ)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:pxa2xx_mmci_read " "size %d addr 0x%02x value 0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , size, addr, value);
    }
}

static inline void trace_pxa2xx_mmci_read(uint8_t size, uint32_t addr, uint32_t value)
{
    if (true) {
        _nocheck__trace_pxa2xx_mmci_read(size, addr, value);
    }
}

#define TRACE_PXA2XX_MMCI_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_PXA2XX_MMCI_WRITE) || \
    false)

static inline void _nocheck__trace_pxa2xx_mmci_write(uint8_t size, uint32_t addr, uint32_t value)
{
    if (trace_event_get_state(TRACE_PXA2XX_MMCI_WRITE)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:pxa2xx_mmci_write " "size %d addr 0x%02x value 0x%08x" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , size, addr, value);
    }
}

static inline void trace_pxa2xx_mmci_write(uint8_t size, uint32_t addr, uint32_t value)
{
    if (true) {
        _nocheck__trace_pxa2xx_mmci_write(size, addr, value);
    }
}
#endif /* TRACE_HW_SD_GENERATED_TRACERS_H */
